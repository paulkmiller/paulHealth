{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Accordion.svelte",
    "AccordionItem.svelte",
    "CollapsibleCard.svelte"
  ],
  "sourcesContent": [
    "\n\n<script>\n\n    import { onDestroy } from 'svelte'\n    import { setContext } from 'svelte'\n    import { createEventDispatcher } from 'svelte'\n    import { writable } from 'svelte/store'\n\n    export let duration = 0.2\n    export let easing = 'ease'\n    export let key = null\n\n    const dispatch = createEventDispatcher()\n\n    // create a store for the children to access\n    const store = writable({ key, duration, easing })\n\n    // when the store changes, update the key prop\n    const unsubscribe = store.subscribe(s => {\n        key = s.key\n        dispatch('change', { key })\n    })\n\n    // when the key prop changes, update the store\n    $: store.update(s => Object.assign(s, { key }))\n\n    // make the store available to children\n    setContext('svelte-collapsible-accordion', store)\n\n    onDestroy(unsubscribe)\n\n</script>\n\n<ul class='accordion'>\n    <slot />\n</ul>\n\n<style>\n\n    ul {\n        list-style: none;\n        padding-left: 0;\n    }\n\n</style>",
    "\n\n<script>\n\n    import { getContext } from 'svelte'\n    import collapse from 'svelte-collapse'\n\n    export let key\n\n    const store = getContext('svelte-collapsible-accordion')\n\n    $: params = { \n        open: $store.key === key, \n        duration: $store.duration,\n        easing: $store.easing\n    }\n\n    function handleToggle () {\n\n        if (params.open) {\n            store.update(s => Object.assign(s, { key: null }))\n        }\n        else {\n            store.update(s => Object.assign(s, { key }))\n        }\n\n    }\n\n</script>\n\n<li class='accordion-item' aria-expanded={params.open}>\n\n    <div class='accordion-item-header' on:click={handleToggle}>\n        <slot name='header' />\n    </div>\n\n    <div class='accordion-item-body' use:collapse={params}>\n        <slot name='body' />\n    </div>\n\n    <slot/>\n\n</li>\n\n<style>\n    .accordion-item-header {\n        user-select: none;\n        cursor: pointer;\n    }\n</style>",
    "\n<script>\n\n    import { createEventDispatcher } from 'svelte'\n    import collapse from 'svelte-collapse'\n\n    export let open = true\n    export let duration = 0.2\n    export let easing = 'ease'\n\n    const dispatch = createEventDispatcher()\n\n    function handleToggle () {\n\n        open = !open\n\n        if (open) {\n            dispatch('open')\n        }\n        else {\n            dispatch('close')\n        }\n\n    }\n\n</script> \n\n<div class='card' class:open aria-expanded={open}>\n\n    <div class='card-header' on:click={handleToggle}>\n        <slot name='header'/>\n    </div>\n\n    <div class='card-body' use:collapse={{open, duration, easing}}>\n        <slot name='body'/>\n    </div>\n\n</div>\n\n<style>\n\n    .card-header {\n        cursor: pointer;\n        user-select: none;\n    }\n\n</style>"
  ],
  "names": [],
  "mappings": "AAwCI,EAAE,cAAC,CAAC,AACA,UAAU,CAAE,IAAI,CAChB,YAAY,CAAE,CAAC,AACnB,CAAC;ACED,sBAAsB,eAAC,CAAC,AACpB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,AACnB,CAAC;ACPD,YAAY,cAAC,CAAC,AACV,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,IAAI,AACrB,CAAC"
}