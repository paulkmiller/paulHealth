{
  "version": 3,
  "sources": ["../../easy-reactive/src/simply-reactive.js", "../../easy-reactive/src/utils/object.js", "../../easy-reactive/src/utils/subscription.js", "../../easy-reactive/src/utils/watcher.js"],
  "sourcesContent": ["import get from 'lodash.get'\r\nimport cloneDeep from 'lodash.clonedeep'\r\n\r\nimport { createSubscription } from './utils/subscription.js'\r\nimport { createTargetWatcher } from './utils/watcher.js'\r\n\r\nexport function simplyReactive(entities, options) {\r\n  const data = get(entities, 'data', {})\r\n  const watch = get(entities, 'watch', {})\r\n  const methods = get(entities, 'methods', {})\r\n  const onChange = get(options, 'onChange', () => {})\r\n\r\n  const { subscribe, notify, subscribers } = createSubscription()\r\n  const { targetWatcher, getTarget } = createTargetWatcher()\r\n\r\n  let _data\r\n  const _methods = {}\r\n  const getContext = () => ({\r\n    data: _data,\r\n    methods: _methods,\r\n  })\r\n\r\n  let callingMethod = false\r\n  const methodWithFlags = (fn) => (...args) => {\r\n    callingMethod = true\r\n    const result = fn(...args)\r\n    callingMethod = false\r\n    return result\r\n  }\r\n\r\n  // init methods before data, as methods may be used in data\r\n  Object.entries(methods).forEach(([methodName, methodItem]) => {\r\n    _methods[methodName] = methodWithFlags((...args) =>\r\n      methodItem(getContext(), ...args)\r\n    )\r\n    Object.defineProperty(_methods[methodName], 'name', { value: methodName })\r\n  })\r\n\r\n  _data = new Proxy(cloneDeep(data), {\r\n    get(target, prop) {\r\n      if (getTarget() && !callingMethod) {\r\n        subscribe(getTarget(), { prop, value: target[prop] })\r\n      }\r\n      return Reflect.get(...arguments)\r\n    },\r\n    set(target, prop, value) {\r\n      // if value is the same, do nothing\r\n      if (target[prop] === value) {\r\n        return true\r\n      }\r\n\r\n      Reflect.set(...arguments)\r\n\r\n      if (!getTarget()) {\r\n        onChange && onChange(prop, value)\r\n        notify(_data, prop)\r\n      }\r\n\r\n      return true\r\n    },\r\n  })\r\n\r\n  Object.entries(watch).forEach(([watchName, watchItem]) => {\r\n    targetWatcher(watchName, () => {\r\n      watchItem(getContext())\r\n    })\r\n  })\r\n\r\n  const output = [_data, _methods]\r\n  output._internal = {\r\n    _getSubscribers() {\r\n      return subscribers\r\n    },\r\n  }\r\n\r\n  return output\r\n}\r\n", "import isEqual from 'lodash.isequal'\r\n\r\nexport const depsAreEqual = (deps1, deps2) => {\r\n  return isEqual(deps1, deps2)\r\n}\r\n\r\nexport const getDepNames = (deps) => {\r\n  return Object.keys(deps || {})\r\n}\r\n\r\nexport const getUpdatedDeps = (depNames, currentData) => {\r\n  const updatedDeps = {}\r\n  depNames.forEach((depName) => {\r\n    updatedDeps[depName] = currentData[depName]\r\n  })\r\n  return updatedDeps\r\n}\r\n", "import { getDepNames, getUpdatedDeps, depsAreEqual } from './object.js'\r\n\r\nexport const createSubscription = () => {\r\n  const subscribers = {}\r\n\r\n  const memoDependency = (target, dep) => {\r\n    const { watcherName, fn } = target\r\n    const { prop, value } = dep\r\n\r\n    if (!subscribers[watcherName]) {\r\n      subscribers[watcherName] = {\r\n        deps: {},\r\n        fn,\r\n      }\r\n    }\r\n    subscribers[watcherName].deps[prop] = value\r\n  }\r\n\r\n  return {\r\n    subscribers,\r\n    subscribe(target, dep) {\r\n      if (target) {\r\n        memoDependency(target, dep)\r\n      }\r\n    },\r\n    notify(data, prop) {\r\n      Object.entries(subscribers).forEach(([watchName, { deps, fn }]) => {\r\n        const depNames = getDepNames(deps)\r\n\r\n        if (depNames.includes(prop)) {\r\n          const updatedDeps = getUpdatedDeps(depNames, data)\r\n          if (!depsAreEqual(deps, updatedDeps)) {\r\n            subscribers[watchName].deps = updatedDeps\r\n            fn()\r\n          }\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n", "export const createTargetWatcher = () => {\r\n  let target = null\r\n\r\n  return {\r\n    targetWatcher(watcherName, fn) {\r\n      target = {\r\n        watcherName,\r\n        fn,\r\n      }\r\n      target.fn()\r\n      target = null\r\n    },\r\n    getTarget() {\r\n      return target\r\n    },\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": ["import_lodash", "isEqual", "get", "cloneDeep"]
}
